on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:
    types: [checks_requested]

name: Continuous integration

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust toolchain
        run: |
          rustup set profile minimal
          rustup toolchain install stable --component llvm-tools-preview
          rustup override set stable

      - name: Cache cargo
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-grcov-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        run: RUSTC_BOOTSTRAP=1 cargo install grcov

      - name: Build
        run: cargo build --all --all-features

      - name: Test
        env:
          RUSTFLAGS: "-C instrument-coverage"
          LLVM_PROFILE_FILE: "clarity-wasm-%p-%m.profraw"
        run: cargo test --all-features -- --nocapture

      - name: Generate coverage
        run: grcov . --binary-path target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          name: clarity-wasm
          verbose: true

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --no-deps --all-features --all-targets -- -D warnings
