name: Continuous Integration

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.yml"
      - "**.yaml"
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.yml"
      - "**.yaml"
  merge_group:
    types: [checks_requested]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Code Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Use Rust nightly with rustfmt
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - run: cargo fmt -- --config group_imports=StdExternalCrate,imports_granularity=Module --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Use Rust nightly with clippy
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - run: cargo clippy --no-deps --all-features --all-targets -- -D warnings -D clippy::expect_used -D clippy::unwrap_used -D clippy::unimplemented

  # Create archives of the test binaries and code coverage data for ClarityLatest.
  build-test-artifacts:
    name: Test Artifacts
    runs-on: ubuntu-latest
    needs: [fmt, clippy]
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Use Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Create archive of test binaries for ClarityLatest
        run: |
          cargo llvm-cov nextest-archive \
            --features test-clarity-latest \
            --workspace \
            --archive-file nextest-archive-latest.tar.zst

      - name: Upload test binaries for ClarityLatest
        uses: actions/upload-artifact@v4
        with:
          name: nextest-archive-latest
          path: nextest-archive-latest.tar.zst
          if-no-files-found: error

      - name: Upload standard.wasm file
        uses: actions/upload-artifact@v4
        with:
          name: standard.wasm
          path: ${{github.workspace}}/clar2wasm/src/standard/standard.wasm
          if-no-files-found: error

  # Clarity::V1 tests.
  run-tests-clarity-v1:
    name: Clarity::V1 Tests
    runs-on: ubuntu-latest
    needs: [build-test-artifacts]
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Use Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Download standard.wasm file
        uses: actions/download-artifact@v4
        with:
          name: standard.wasm
          path: ${{github.workspace}}/clar2wasm/src/standard/

      - name: Run tests
        shell: bash
        run: |
          cargo nextest run \
            --features test-clarity-v1

  # Clarity::V2 tests.
  run-tests-clarity-v2:
    name: Clarity::V2 Tests
    runs-on: ubuntu-latest
    needs: [build-test-artifacts]
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Use Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Download standard.wasm file
        uses: actions/download-artifact@v4
        with:
          name: standard.wasm
          path: ${{github.workspace}}/clar2wasm/src/standard/

      - name: Run tests
        shell: bash
        run: |
          cargo nextest run \
            --features test-clarity-v2

  # Clarity::V3 (latest) tests.
  # Run the tests and generates coverage reports
  # using the precompiled data from the build-test-artifacts job.
  run-tests-clarity-latest:
    name: Clarity::V3 (latest) Tests
    runs-on: ubuntu-latest
    needs: [build-test-artifacts]
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Use Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Download standard.wasm file
        uses: actions/download-artifact@v4
        with:
          name: standard.wasm
          path: ${{github.workspace}}/clar2wasm/src/standard/

      - name: Download archive
        uses: actions/download-artifact@v4
        with:
          name: nextest-archive-latest

      - name: Run tests and output coverage
        shell: bash
        run: |
          cargo llvm-cov nextest \
            --archive-file nextest-archive-latest.tar.zst \
            --codecov \
            --output-path codecov.json

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: codecov.json
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  # Compile boot contracts with a release version.
  compile-boot-contracts:
    name: Compile boot-contracts
    runs-on: ubuntu-latest
    needs: [fmt, clippy]
    defaults:
      run:
        working-directory: ./clar2wasm
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4

      - name: Use Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Setup wasm-tools
        uses: bytecodealliance/actions/wasm-tools/setup@v1

      - name: Compile boot-contracts
        run: |
          cargo build --release
          bash ./scripts/boot-contracts-compile.sh
